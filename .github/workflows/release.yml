name: 'Release'

on:
  repository_dispatch:
    types: [run-release]
  workflow_dispatch: # Keep for manual triggering

run-name: Release v${{ github.event.client_payload.version }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create tags and releases
      packages: write # Add this for package publishing permissions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.sha }} # Checkout the commit that triggered the CI/E2E
          fetch-depth: 0 # Required for notes generation

      - name: Setup Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 'Install Dependencies'
        run: |-
          npm ci

      - name: Build and Prepare Packages
        run: |
          npm run build:packages
          npm run prepare:package

      - name: Create Release and Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract version from package.json
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          RELEASE_TAG="v${PACKAGE_VERSION}"

          # Publish to npm first to ensure the version is available before creating the release.
          # The --workspace flag was incorrect for publishing the root package.
          npm publish --workspace @hahnd/geminid --access public
          npm publish --workspace @hahnd/gemini-cli-core --access public

          # If npm publish succeeds, create the GitHub Release.
          # This command also creates and pushes the git tag to the correct commit.
          gh release create "$RELEASE_TAG" \
            --target "${{ github.event.client_payload.sha }}" \
            --generate-notes \
            --title "Release $RELEASE_TAG" \
            bundle/*
