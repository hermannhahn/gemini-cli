name: 'Release'

on:
  repository_dispatch:
    types: ['run-release']
  workflow_dispatch:
    inputs:
      force_skip_tests:
        description: 'Select to skip the "Run Tests" step in testing. Prod releases should run tests'
        required: false
        type: 'boolean'
        default: false

run-name: 'Release v${{ github.event.client_payload.version }}'

jobs:
  release:
    runs-on: 'ubuntu-latest'
    environment:
      name: '${{ github.event.client_payload.version }}'
      url: '${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.version.outputs.RELEASE_TAG }}'
    if: '"${{ github.repository }}" == "hermannhahn/gemini-cli"'
    permissions:
      contents: 'write'
      packages: 'write'
      id-token: 'write'
    outputs:
      RELEASE_TAG: '${{ steps.version.outputs.RELEASE_TAG }}'

    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8' # ratchet:actions/checkout@v5
        with:
          ref: '${{ github.sha }}' # Checkout a specific commit
          fetch-depth: '0' # Required for notes generation

      - name: 'Setup Node.js and npm'
        uses: 'actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020' # ratchet:actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'
          scope: '@hahnd'

      - name: 'Install Dependencies'
        run: 'npm ci'

      - name: 'Get the version'
        id: 'version'
        run: |
          VERSION_JSON=$(node scripts/get-release-version.js)
          echo "RELEASE_TAG=$(echo "$VERSION_JSON" | jq -r .releaseTag)" >> "$GITHUB_OUTPUT"
          echo "RELEASE_VERSION=$(echo "$VERSION_JSON" | jq -r .releaseVersion)" >> "$GITHUB_OUTPUT"
          echo "NPM_TAG=$(echo "$VERSION_JSON" | jq -r .npmTag)" >> "$GITHUB_OUTPUT"

      - name: 'Run Tests'
        if: '"${{ github.event.inputs.force_skip_tests }}" != true'
        run: |
          npm run preflight
        env:
          GEMINI_API_KEY: '${{ secrets.GEMINI_API_KEY }}'

      - name: 'Configure Git User'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 'Build and Prepare Packages'
        run: |
          npm run build:packages
          npm run prepare:package

      - name: 'Publish @hahnd/gemini-cli-core'
        run: 'npm publish --workspace=@hahnd/gemini-cli-core --tag=${{ steps.version.outputs.NPM_TAG }}'
        env:
          NODE_AUTH_TOKEN: '${{ secrets.NPM_TOKEN }}'

      - name: 'Install latest core package'
        run: 'npm install @hahnd/gemini-cli-core@${{ steps.version.outputs.RELEASE_VERSION }} --workspace=@hahnd/geminid --save-exact'

      - name: 'Publish @hahnd/geminid'
        run: 'npm publish --workspace=@hahnd/geminid --tag=${{ steps.version.outputs.NPM_TAG }}'
        env:
          NODE_AUTH_TOKEN: '${{ secrets.NPM_TOKEN }}'

      - name: 'Create GitHub Release and Tag'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: 'gh release create ${{ steps.version.outputs.RELEASE_TAG }} \
          bundle/geminid.js \
          --target ${{ github.sha }} \
          --title "Release ${{ steps.version.outputs.RELEASE_TAG }}" \
          --generate-notes'
